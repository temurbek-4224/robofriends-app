{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/errorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","Scroll","props","style","overflowY","height","children","SearchBox","searchfield","searchChange","type","placeholder","onChange","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAceA,EAZF,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GAC1B,OACC,sBAAKC,UAAY,sDAAjB,UACC,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,UACpD,gCACC,6BAAKL,IACL,4BAAIC,WCYOK,EAjBE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAClB,OACC,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GAClB,OAAQ,cAAC,EAAD,CAENR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCCGC,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,SAAWZ,UAAU,aAA/D,SACES,EAAMI,YCUKC,EAbG,SAAC,GAAgC,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aACjC,OACC,qBAAKhB,UAAY,MAAjB,SACC,uBACCA,UAAW,mCACXiB,KAAK,SACLC,YAAc,gBACdC,SAAYH,OCaDI,G,wDAnBd,WAAYX,GAAO,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACZC,UAAU,GAHM,E,qDAOlB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG1B,WACC,OAAIG,KAAKJ,MAAMC,SACP,2DAEDG,KAAKhB,MAAMI,a,GAhBOc,cC8CZC,E,kDAvCd,aAAc,IAAD,8BACZ,gBAaDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAEX,YAAae,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACZjB,OAAQ,GACRW,YAAa,IAJF,E,qDAQb,WAAoB,IAAD,OAClBkB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKX,SAAS,CAACtB,OAASiC,S,oBAO1C,WACC,MAA6BZ,KAAKJ,MAA3BjB,EAAP,EAAOA,OAAOW,EAAd,EAAcA,YACRuB,EAAiBlC,EAAOmC,QAAO,SAAAC,GACpC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAAS3B,EAAY0B,kBAEtD,OAAQrC,EAAOuC,OAGb,sBAAK3C,UAAY,KAAjB,UACE,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWgB,aAAgBS,KAAKI,iBACjC,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUzB,OAAUkC,WAPxB,gD,GAzBeX,aCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAK1BZ,M","file":"static/js/main.d33b1c51.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name,email,id }) =>{\r\n\treturn(\r\n\t\t<div className = 'bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\r\n\t\t\t<img src={`https://robohash.org/${id}?200x200`} alt='sorry'/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst CardList = ({robots})=>{\r\n\treturn(\r\n\t\t<div>\r\n    \t{\r\n    \t\trobots.map((user,i)=>{\r\n\t\t\t\t\treturn (<Card \r\n\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n    \t}\r\n    </div>\r\n\t);\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn(\r\n\t\t<div style={{overflowY: 'scroll', height: '500px' }} className='hideScroll' >\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange}) =>{\r\n\treturn(\r\n\t\t<div className = 'pa2'>\r\n\t\t\t<input \r\n\t\t\t\tclassName= 'pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tplaceholder = 'search robots'\r\n\t\t\t\tonChange = {searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info){\r\n\t\tthis.setState({hasError: true});\r\n\t}\r\n\r\n\trender(){\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1>OOooopx. That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;","import React,{ Component } from 'react';\r\nimport CardList from '../components/CardList';\r\n// import {robots} from './robots';\r\nimport Scroll from '../components/Scroll'\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport ErrorBoundry from '../components/errorBoundry.js';\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(users => {this.setState({robots : users})})\r\n\t}\r\n\r\n\tonSearchChange = (event) =>{\r\n\t\tthis.setState({ searchfield: event.target.value})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {robots,searchfield} = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n\t\t});\r\n\t\treturn !robots.length ?\r\n\t\t <h1>Loading...</h1> \r\n\t\t : (\r\n\t\t\t\t<div className = 'tc'>\r\n\t\t\t\t  <h1 className='f1'>Robo Friends</h1>\r\n\t\t\t\t  <SearchBox searchChange = {this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t\t<CardList robots = {filteredRobots}/>\r\n\t\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n// import Card from './Card';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}